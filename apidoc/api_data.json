[  {    "type": "post",    "url": "/auth/login",    "title": "Login User",    "name": "Login_user",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User Object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>User ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>Username</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>JWT token that can be placed in HEADER for authorization</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"user\": {\n    \"id\": \"58af171ace68fe000f732753\",\n    \"username\": \"isaac\"\n  },\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODgzNjkzODUsImV4cCI6MTQ4ODM3NjU4NX0.-fNQqa3zJZaCPB14G4wd6PoZTg3FV7dATkf9LCS_Rxg\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'wrongPassword', 'invalidUser', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"wrongPassword\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/auth/signup",    "title": "Signup User",    "name": "Signup_user",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the new user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the new user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User ID of the new user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"58af171ace68fe000f732753\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'alreadyExist', 'databaseError', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"alreadyExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication"  },  {    "type": "delete",    "url": "/ratings/:userId/:locationId",    "title": "Delete ratings by userId and locationId",    "name": "ratings_delete_userid_locationid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "description": "<p>Delete a rating object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the rating record deleted</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings"  },  {    "type": "patch",    "url": "/ratings/:userId/:locationId",    "title": "Patch ratings by userId and locationId",    "name": "ratings_patch_userid_locationid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "description": "<p>Patch a rating object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rating",            "description": "<p>New rating value</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the rating record</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings"  },  {    "type": "get",    "url": "/ratings/:userId",    "title": "Retrieve ratings by userId",    "name": "ratings_userid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "description": "<p>Retrieve all ratings added by the user with that userId.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Ratings[]",            "optional": false,            "field": "ratings",            "description": "<p>Array containing all ratings object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "ratings.locationId",            "description": "<p>Location ID of the location associated with that rating</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "ratings.rating",            "description": "<p>Rating value ([0, 10])</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "[{\n  \"locationId\": \"1234567\",\n  \"rating\": 5.8\n},\n{\n  \"locationId\": \"2135sadas\",\n  \"rating\": 6.89\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings"  },  {    "type": "get",    "url": "/ratings/:userId/:locationId",    "title": "Retrieve ratings by userId and locationId",    "name": "ratings_userid_locationid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location ID of the location associated with that rating</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>Rating value ([0, 10])</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"locationId\": \"1234567\",\n  \"rating\": 5.8\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings"  },  {    "type": "post",    "url": "/locations/",    "title": "Add new location",    "name": "location_add",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the location</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Description of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Tags associated with the location (e.g. 'beach')</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "coordinates",            "description": "<p>Coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lat",            "description": "<p>Latitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lng",            "description": "<p>Longitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "photoIds",            "description": "<p>IDs of all the photos taken at the location</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the newly created object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations"  },  {    "type": "delete",    "url": "/locations/:locationId",    "title": "Delete a location",    "name": "location_delete",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "description": "<p>This endpoint is probably just for debugging purposes.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the location</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the delected object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations"  },  {    "type": "get",    "url": "/locations/:locationId",    "title": "Retrieve locations",    "name": "location_get",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "description": "<p>If no query object is specified, the endpoint will return all the locations. Efficient search by rating is difficult to implement efficiently so skip for now.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query",            "defaultValue": "{}",            "description": "<p>Query object</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range",            "description": "<p>Search range</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.lat",            "description": "<p>Latitude of the enter of the search circle</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.lng",            "description": "<p>Longitude of the center of the search circle</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.radius",            "description": "<p>Search radius of the circle (in meter)</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "query.tags",            "description": "<p>Tags to search</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.name",            "description": "<p>Name of the location</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Location[]",            "optional": false,            "field": "locations",            "description": "<p>Array containing all matching locations, empty array if no match. For detailed strucuture, please refer to &quot;Retrieve location by id&quot;.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "[{\n  \"id\": \"1234567\",\n  \"name\": \"Small Bridge Flowing Water\",\n  \"description\": \"Some fun place.\",\n  \"tags\": [\"CUHK\", \"fun\"],\n  \"coordinates\": {\n    \"lat\": 23.02323,\n    \"lng\": -23.323223\n  },\n  \"rating\": 7.8,\n  \"photoIds\": [\"dasddasd\", \"asd23ewaasd\"]\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations"  },  {    "type": "get",    "url": "/locations/:locationId",    "title": "Retrieve location by id",    "name": "location_get_id",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the location</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the location</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Description of the location</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Tags associated with the location (e.g. 'beach')</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "coordinates",            "description": "<p>Coordinate of the location</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "coordinates.lat",            "description": "<p>Latitude coordinate of the location</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "coordinates.lng",            "description": "<p>Longitude coordinate of the location</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>Rating of the location, which is calcuated using Rating table.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "photoIds",            "description": "<p>IDs of all the photos taken at the location</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\",\n  \"name\": \"Small Bridge Flowing Water\",\n  \"description\": \"Some fun place.\",\n  \"tags\": [\"CUHK\", \"fun\"],\n  \"coordinates\": {\n    \"lat\": 23.02323,\n    \"lng\": -23.323223\n  },\n  \"rating\": 7.8,\n  \"photoIds\": [\"dasddasd\", \"asd23ewaasd\"]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('locationNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations"  },  {    "type": "patch",    "url": "/locations/:locationId",    "title": "Patch a location",    "name": "location_patch",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "description": "<p>If the param includes name only, then replace the name field in the current record and keep all the other fields.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the location</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Description of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "tags",            "description": "<p>Tags associated with the location (e.g. 'beach')</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "coordinates",            "description": "<p>Coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lat",            "description": "<p>Latitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lng",            "description": "<p>Longitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "photoIds",            "description": "<p>IDs of all the photos taken at the location</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the newly created object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"1234567\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations"  },  {    "type": "get",    "url": "/test",    "title": "Test backend connection",    "name": "Test",    "permission": [      {        "name": "User"      }    ],    "group": "Test",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Status, only having an 'ok' value.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/test.ts",    "groupTitle": "Test"  }]
