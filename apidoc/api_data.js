define({ "api": [  {    "type": "delete",    "url": "/auth/id/:userId",    "title": "Delete User",    "name": "user_delete",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Id of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/auth/id/:userId",    "title": "Get User",    "name": "user_get",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Id of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\",\n  \"username\": \"isaac\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication"  },  {    "type": "post",    "url": "/auth/login",    "title": "Login User",    "name": "user_login",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User Object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>User ID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>Username</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>JWT token that can be placed in HEADER for authorization</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"user\": {\n    \"id\": \"{{id-placeholder}}\",\n    \"username\": \"isaac\"\n  },\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODgzNjkzODUsImV4cCI6MTQ4ODM3NjU4NX0.-fNQqa3zJZaCPB14G4wd6PoZTg3FV7dATkf9LCS_Rxg\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'wrongPassword', 'invalidUser', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"wrongPassword\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication"  },  {    "type": "patch",    "url": "/auth/id/:userId",    "title": "Patch User",    "name": "user_patch",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Id of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>New password</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/auth/signup",    "title": "Signup User",    "name": "user_signup",    "permission": [      {        "name": "None"      }    ],    "group": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the new user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the new user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'alreadyExist', 'databaseError', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"alreadyExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth.ts",    "groupTitle": "Authentication",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/comments",    "title": "Create new comment",    "name": "comments_create",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>UserId of the comment poster</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>PhotoId associated with the comment</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>Timestamp when the comment was created</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Content of the comment</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/comments/id/:commentId",    "title": "Delete a comment",    "name": "comments_delete",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commentId",            "description": "<p>ID of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('commentNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"commentNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/comments/id/:commentId",    "title": "Patch a comment",    "name": "comments_patch",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commentId",            "description": "<p>ID of the comment</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "userId",            "description": "<p>UserId of the comment poster</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "photoId",            "description": "<p>PhotoId associated with the comment</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "timestamp",            "description": "<p>Timestamp when the comment was created</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "content",            "description": "<p>Content of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('commentNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"commentNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/comments/id/:commentId",    "title": "Retrieve comment by commentId",    "name": "comments_retrieve_commentId",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commentId",            "description": "<p>ID of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('commentNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"commentNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>UserId of the comment poster</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>PhotoId associated with the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>Timestamp when the comment was created</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Content of the comment</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"id\": \"{{id-placeholder}}\",\n   \"userId\": \"{{id-placeholder}}\",\n   \"photoId\": \"{{id-placeholder}}\",\n   \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n   \"content\": \"wow. first!\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/comments/photos/:photoId",    "title": "Retrieve all comments by photoId",    "name": "comments_retrieve_photoId",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>ID of the photo</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"photoNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Comment[]",            "optional": false,            "field": "comments",            "description": "<p>Array containing comments associated with a photo, sorted by timestamp</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.id",            "description": "<p>ID of the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.userId",            "description": "<p>UserId of the comment poster</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.photoId",            "description": "<p>PhotoId associated with the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.timestamp",            "description": "<p>Timestamp when the comment was created</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.content",            "description": "<p>Content of the comment</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " { \"comments\":\n    [{\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n      \"content\": \"wow. first!\"\n    },\n    {\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:40:27+00:00\",\n      \"content\": \"wow. second!\"\n    }]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/comments/users/:userId",    "title": "Retrieve all comments by userId",    "name": "comments_retrieve_userId",    "permission": [      {        "name": "User"      }    ],    "group": "Comments",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/comments.ts",    "groupTitle": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Comment[]",            "optional": false,            "field": "comments",            "description": "<p>Array containing comments associated with a photo, sorted by timestamp</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.id",            "description": "<p>ID of the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.userId",            "description": "<p>UserId of the comment poster</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.photoId",            "description": "<p>PhotoId associated with the comment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.timestamp",            "description": "<p>Timestamp when the comment was created</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments.content",            "description": "<p>Content of the comment</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " { \"comments\":\n    [{\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n      \"content\": \"wow. first!\"\n    },\n    {\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:40:27+00:00\",\n      \"content\": \"wow. second!\"\n    }]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/likes",    "title": "Create new like",    "name": "likes_create",    "permission": [      {        "name": "User"      }    ],    "group": "Likes",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>ID of the photo</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('alreadyExist', 'userNotExist', 'photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/likes.ts",    "groupTitle": "Likes",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/likes",    "title": "Delete like by userId and photoId",    "name": "likes_delete_userId_photoId",    "permission": [      {        "name": "User"      }    ],    "group": "Likes",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>ID of the photo</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'photoNotExist', 'likeNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"likeNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/likes.ts",    "groupTitle": "Likes",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/likes/photos/:photoId",    "title": "Retrieve all likes by photoId",    "name": "likes_retrieve_photoId",    "permission": [      {        "name": "User"      }    ],    "group": "Likes",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>ID of the photo</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"photoNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/likes.ts",    "groupTitle": "Likes",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Likes[]",            "optional": false,            "field": "likes",            "description": "<p>Array containing likes, sorted by timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " { \"likes\":\n    [{\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:30:27+00:00\"\n    },\n    {\n      \"id\": \"31{{id-placeholder}}23\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:40:27+00:00\"\n    }]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/likes/users/:userId",    "title": "Retrieve all likes by userId",    "name": "likes_retrieve_userId",    "permission": [      {        "name": "User"      }    ],    "group": "Likes",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/likes.ts",    "groupTitle": "Likes",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Likes[]",            "optional": false,            "field": "likes",            "description": "<p>Array containing likes, sorted by timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " { \"likes\":\n    [{\n      \"id\": \"{{id-placeholder}}\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:30:27+00:00\"\n    },\n    {\n      \"id\": \"31{{id-placeholder}}23\",\n      \"userId\": \"{{id-placeholder}}\",\n      \"timestamp\": \"2017-03-02T16:40:27+00:00\"\n    }]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/likes/users/:userId/photos/:photoId",    "title": "Retrieve like status by userId and photoId",    "name": "likes_status",    "permission": [      {        "name": "User"      }    ],    "group": "Likes",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>ID of the photo</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'photoNotExist', 'likeNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"likeNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/likes.ts",    "groupTitle": "Likes",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Likes",            "optional": false,            "field": "likes",            "description": "<p>Like object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\",\n  \"userId\": \"{{id-placeholder}}\",\n  \"timestamp\": \"2017-03-02T16:30:27+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/ratings",    "title": "Create ratings",    "name": "ratings_create",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "description": "<p>Creates a rating object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rating",            "description": "<p>Rating value</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', 'locationNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/ratings/users/:userId/locations/:locationId",    "title": "Delete ratings by userId and locationId",    "name": "ratings_delete_userid_locationid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', 'locationNotExist', 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/ratings/users/:userId/locations/:locationId",    "title": "Patch ratings by userId and locationId",    "name": "ratings_patch_userid_locationid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rating",            "description": "<p>New rating value</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', 'locationNotExist', 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/ratings/users/:userId",    "title": "Retrieve all ratings by userId",    "name": "ratings_retrieve_userid",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "description": "<p>Retrieve all ratings added by the user with that userId.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Ratings[]",            "optional": false,            "field": "ratings",            "description": "<p>Array containing all ratings object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "ratings.locationId",            "description": "<p>Location ID of the location associated with that rating</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "ratings.rating",            "description": "<p>Rating value ([0, 10])</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"ratings\": [{\n     \"locationId\": \"{{id-placeholder}}\",\n     \"rating\": 5.8\n   },\n   {\n     \"locationId\": \"{{id-placeholder}}\",\n     \"rating\": 6.89\n   }]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/ratings/users/:userId/locations/:locationId",    "title": "Retrieve ratings by userId and locationId",    "name": "ratings_retrieve_userid_locationId",    "permission": [      {        "name": "User"      }    ],    "group": "Locations_Ratings",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', 'locationNotExist', 'ratingNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/ratings.ts",    "groupTitle": "Locations_Ratings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>Location ID of the location associated with that rating</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>Rating value ([0, 10])</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"locationId\": \"{{id-placeholder}}\",\n  \"rating\": 5.8\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/locations",    "title": "Create new location",    "name": "location_create",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the location</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Description of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Tags associated with the location (e.g. 'beach')</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "coordinates",            "description": "<p>Coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lat",            "description": "<p>Latitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "coordinates.lng",            "description": "<p>Longitude coordinate of the location</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/locations/id/:locationId",    "title": "Delete a location",    "name": "location_delete",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>ID of the location</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('locationNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/locations/id/:locationId",    "title": "Patch a location",    "name": "location_patch",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "description": "<p>If the param includes name only, then replace the name field in the current record and keep all the other fields.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>ID of the location</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the location</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Description of the location</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "tags",            "description": "<p>Tags associated with the location (e.g. 'beach')</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "coordinates",            "description": "<p>Coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "coordinates.lat",            "description": "<p>Latitude coordinate of the location</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "coordinates.lng",            "description": "<p>Longitude coordinate of the location</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('locationNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/locations/id/:locationId",    "title": "Retrieve location by locationId",    "name": "location_retrieve_locationId",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>ID of the location</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('locationNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Location[]",            "optional": false,            "field": "locations",            "description": "<p>Array containing all matching locations, empty array if no match. For detailed strucuture, please refer to &quot;Retrieve location by id&quot;.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " {\n   \"id\": \"{{id-placeholder}}\",\n   \"name\": \"Small Bridge Flowing Water\",\n   \"description\": \"Some fun place.\",\n   \"tags\": [\"CUHK\", \"fun\"],\n   \"coordinates\": {\n     \"lat\": 23.02323,\n     \"lng\": -23.323223\n    },\n   \"rating\": 7.8\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/locations/query",    "title": "Retrieve locations by query",    "name": "location_retrieve_query",    "permission": [      {        "name": "User"      }    ],    "group": "Locations",    "description": "<p>If no query object is specified, the endpoint will return all the locations. Efficient search by rating is difficult to implement efficiently so skip for now.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query",            "defaultValue": "{}",            "description": "<p>Query object</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range",            "description": "<p>Search range</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.lat",            "description": "<p>Latitude of the enter of the search circle</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.lng",            "description": "<p>Longitude of the center of the search circle</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.range.radius",            "description": "<p>Search radius of the circle (in meter)</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "query.tags",            "description": "<p>Tags to search</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "query.name",            "description": "<p>Name of the location</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/locations.ts",    "groupTitle": "Locations",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Location[]",            "optional": false,            "field": "locations",            "description": "<p>Array containing all matching locations, empty array if no match. For detailed strucuture, please refer to &quot;Retrieve location by id&quot;.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " { \"locations\":\n    [{\n      \"id\": \"{{id-placeholder}}\",\n      \"name\": \"Small Bridge Flowing Water\",\n      \"description\": \"Some fun place.\",\n      \"tags\": [\"CUHK\", \"fun\"],\n      \"coordinates\": {\n        \"lat\": 23.02323,\n        \"lng\": -23.323223\n      },\n      \"rating\": 7.8\n    }]\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/photos",    "title": "Create new photo",    "name": "photos_create",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "description": "<p>This part does not contain photo upload logic, they will be handled seperately.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>user id of the uploader</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>location id where the photo is taken</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>url path of the photo</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the photo added by the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'locationNotExist', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/photos/id/:photoId",    "title": "Delete a photo",    "name": "photos_delete",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>photo id of the photo to be deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"photoNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/photos/id/:photoId",    "title": "Patch a photo",    "name": "photos_patch",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "description": "<p>PATCH api will update part of the existing object</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>photo id of the photo to be modified</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "userId",            "description": "<p>user id of the uploader</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "locationId",            "description": "<p>location id where the photo is taken</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "url",            "description": "<p>url path of the photo</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>description of the photo added by the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"photoNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/photos/locations/:photoId",    "title": "Retrieve photos associated with a location",    "name": "photos_retrieve_locationId",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>location id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('locationNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"locationNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Photo[]",            "optional": false,            "field": "photos",            "description": "<p>array containing all matching photos</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.id",            "description": "<p>photo id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.userId",            "description": "<p>user id of the uploader</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.locationId",            "description": "<p>location id where the photo is taken</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.timestamp",            "description": "<p>time when the photo is uploaded (ISO 8601 format)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.url",            "description": "<p>url path of the photo</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.description",            "description": "<p>description of the photo added by the user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"photos\": [{\n    \"id\": \"{{id-placeholder}}\",\n    \"userId\": \"{{id-placeholder}}\",\n    \"locationId\": \"{{id-placeholder}}\",\n    \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n    \"url\": \"http://trapho.com/whatver/fsdfsdfsdf.jpg\",\n    \"description\": \"Wow. This is amazing.\"\n  }]\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/photos/id/:photoId",    "title": "Retrieve photo by photoId",    "name": "photos_retrieve_photoId",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "photoId",            "description": "<p>photo id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('photoNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"photoNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>photo id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>user id of the uploader</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locationId",            "description": "<p>location id where the photo is taken</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>time when the photo is uploaded (ISO 8601 format)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>url path of the photo</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the photo added by the user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\",\n  \"userId\": \"{{id-placeholder}}\",\n  \"locationId\": \"{{id-placeholder}}\",\n  \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n  \"url\": \"http://trapho.com/whatver/fsdfsdfsdf.jpg\",\n  \"description\": \"Wow. This is amazing.\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/photos/users/:userId",    "title": "Retrieve all photos of an user",    "name": "photos_retrieve_userId",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>user id of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Photo[]",            "optional": false,            "field": "photos",            "description": "<p>array containing all matching photos</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.id",            "description": "<p>photo id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.userId",            "description": "<p>user id of the uploader</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.locationId",            "description": "<p>location id where the photo is taken</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.timestamp",            "description": "<p>time when the photo is uploaded (ISO 8601 format)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.url",            "description": "<p>url path of the photo</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "photos.description",            "description": "<p>description of the photo added by the user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"photos\": [{\n    \"id\": \"{{id-placeholder}}\",\n    \"userId\": \"{{id-placeholder}}\",\n    \"locationId\": \"{{id-placeholder}}\",\n    \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n    \"url\": \"http://trapho.com/whatver/fsdfsdfsdf.jpg\",\n    \"description\": \"Wow. This is amazing.\"\n  }]\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/photos/upload",    "title": "Upload a photo to disk storage",    "name": "photos_upload",    "permission": [      {        "name": "User"      }    ],    "group": "Photos",    "description": "<p>Isaac will implement this.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "File",            "optional": false,            "field": "file",            "description": "<p>the file object</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>url path of the uploaded file</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"url\": \"sf1412ffsdfasdase1123.jpg\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('noFileUploaded', 'fileFormatInvalid', 'uploadFailed' etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"noFileUploaded\"",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/photos.ts",    "groupTitle": "Photos"  },  {    "type": "get",    "url": "/test",    "title": "Test backend connection",    "name": "Test",    "permission": [      {        "name": "User"      }    ],    "group": "Test",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Status, only having an 'ok' value.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/test.ts",    "groupTitle": "Test"  },  {    "type": "post",    "url": "/trips/",    "title": "Create a trip",    "name": "trips_create",    "permission": [      {        "name": "User"      }    ],    "group": "Trips",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the trip</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user who created the trip</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>Timestamp when the trip is created</p>"          },          {            "group": "Parameter",            "type": "Object[]",            "optional": false,            "field": "locations",            "description": "<p>See below for object structure</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.id",            "description": "<p>ID of the locationId</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.startTime",            "description": "<p>Timestamp when the location visit starts</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.endTime",            "description": "<p>Timestamp when the location visit ends</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "locations.comment",            "description": "<p>Custom user comments on the location</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>Possible value: 'userNotExist', etc.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"ratingNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips.ts",    "groupTitle": "Trips",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/trips/id/:tripId",    "title": "Delete a trip",    "name": "trips_delete",    "permission": [      {        "name": "User"      }    ],    "group": "Trips",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tripId",            "description": "<p>ID of the trip to be patched</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('tripNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"tripNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips.ts",    "groupTitle": "Trips",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/trips/id/:tripId",    "title": "Retrieve trip by tripId",    "name": "trips_id",    "permission": [      {        "name": "User"      }    ],    "group": "Trips",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tripID",            "description": "<p>ID of the trip</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('tripNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"tripNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips.ts",    "groupTitle": "Trips",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user who created the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>Timestamp when the trip is created</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "locations",            "description": "<p>See below for object structure</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locations.id",            "description": "<p>ID of the locationId</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locations.startTime",            "description": "<p>Timestamp when the location visit starts</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "locations.endTime",            "description": "<p>Timestamp when the location visit ends</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "locations.comment",            "description": "<p>Custom user comments on the location</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"id\": \"{{id-placeholder}}\",\n   \"name\": \"Taiwan Trip\",\n   \"userId\": \"{{id-placeholder}}\",\n   \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n   \"locations\": [\n     {\n       \"id\": \"{{id-placeholder}}\",\n       \"startTime\": \"2017-04-02T10:39:27+00:00\",\n       \"endTime\": \"2017-04-02T16:39:27+00:00\",\n       \"comment\": \"Must visit this, fun place!\"\n     }\n   ]\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/trips/id/:tripId",    "title": "Patch a trip",    "name": "trips_patch",    "permission": [      {        "name": "User"      }    ],    "group": "Trips",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tripId",            "description": "<p>ID of the trip to be patched</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the trip</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user who created the trip</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>Timestamp when the trip is created</p>"          },          {            "group": "Parameter",            "type": "Object[]",            "optional": false,            "field": "locations",            "description": "<p>See below for object structure</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.id",            "description": "<p>ID of the locationId</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.startTime",            "description": "<p>Timestamp when the location visit starts</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "locations.endTime",            "description": "<p>Timestamp when the location visit ends</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "locations.comment",            "description": "<p>Custom user comments on the location</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('tripNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"tripNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips.ts",    "groupTitle": "Trips",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the modified/created/deleted resource</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"id\": \"{{id-placeholder}}\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/trips/users/:userId",    "title": "Retrieve all trips by userId",    "name": "trips_userId",    "permission": [      {        "name": "User"      }    ],    "group": "Trips",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>ID of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "String",            "optional": false,            "field": "apiError",            "description": "<p>Error message ('userNotExist', 'databaseError', etc.)</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n  \"error\": \"userNotExist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips.ts",    "groupTitle": "Trips",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Trip[]",            "optional": false,            "field": "trips",            "description": "<p>Array containing trip object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.id",            "description": "<p>ID of the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.name",            "description": "<p>Name of the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.userId",            "description": "<p>ID of the user who created the trip</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.timestamp",            "description": "<p>Timestamp when the trip is created</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "trips.locations",            "description": "<p>See below for object structure</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.locations.id",            "description": "<p>ID of the locationId</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.locations.startTime",            "description": "<p>Timestamp when the location visit starts</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.locations.endTime",            "description": "<p>Timestamp when the location visit ends</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "trips.[locations.comment]",            "description": "<p>Custom user comments on the location</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n  \"trips\":  [{\n     \"id\": \"{{id-placeholder}}\",\n     \"name\": \"Taiwan Trip\",\n     \"userId\": \"{{id-placeholder}}\",\n     \"timestamp\": \"2017-03-02T16:39:27+00:00\",\n     \"locations\": [\n       {\n        \"id\": \"{{id-placeholder}}\",\n        \"startTime\": \"2017-04-02T10:39:27+00:00\",\n        \"endTime\": \"2017-04-02T16:39:27+00:00\",\n        \"comment\": \"Must visit this, fun place!\"\n       }\n    ]\n  }]\n}",          "type": "json"        }      ]    }  }] });
