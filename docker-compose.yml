version: '2'

volumes:
  mongodata:
    external: true
  photo-storage:
    external: true

services:

  mongo:
    image: mongo:3.2
    command: "mongod --logpath /dev/null --smallfiles --setParameter failIndexKeyTooLong=false"
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    network_mode: "bridge"

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile-prod
    ports:
      - "3000:3000"
    network_mode: "bridge"
    environment:
      BRIDGE_ADDRESS: $BRIDGE_ADDRESS
    volumes:
      - photo-storage:/data/photos

  activity-microservice:
    build:
      context: ./activity-microservice
      dockerfile: Dockerfile-prod
    ports:
      - "3001:3001"
    links:
      - "mongo"
    network_mode: "bridge"
    environment:
      BRIDGE_ADDRESS: $BRIDGE_ADDRESS

  auth-microservice:
    build:
      context: ./auth-microservice
      dockerfile: Dockerfile-prod
    ports:
      - "3002:3002"
    links:
      - "mongo"
    network_mode: "bridge"
    environment:
      BRIDGE_ADDRESS: $BRIDGE_ADDRESS

  location-microservice:
    build:
      context: ./location-microservice
      dockerfile: Dockerfile-prod
    ports:
      - "3003:3003"
    links:
      - "mongo"
    network_mode: "bridge"
    environment:
      BRIDGE_ADDRESS: $BRIDGE_ADDRESS

  photo-microservice:
    build:
      context: ./photo-microservice
      dockerfile: Dockerfile-prod
    ports:
      - "3004:3004"
    links:
      - "mongo"
    network_mode: "bridge"


  timeline-microservice:
    build:
      context: ./timeline-microservice
      dockerfile: Dockerfile-prod
    ports:
      - "3005:3005"
    links:
      - "mongo"
    network_mode: "bridge"
    environment:
      BRIDGE_ADDRESS: $BRIDGE_ADDRESS

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    ports:
      - "5000:5000"
